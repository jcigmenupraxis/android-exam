buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("AndroidExam.jks")
            storePassword "Passw0rd"
            keyAlias "AndroidExam"
            keyPassword "Passw0rd"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors.all {
        ext.host_name = null
    }

    flavorDimensions "task"

    productFlavors {

        Mock {
            dimension "task"
            host_name = '\"http://192.168.242.106:8090\"'
            applicationIdSuffix ".mock"
            versionNameSuffix "-prod"

            buildConfigField 'String', 'HOST_NAME', host_name
        }

        Prod {
            host_name = '\"http://54.255.133.47:8090\"'
            applicationIdSuffix ".prod"
            versionNameSuffix "-prod"

            buildConfigField 'String', 'HOST_NAME', host_name
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name

        if (names.contains("Mock") && variant.buildType.name == "release") {
            variant.ignore = true
        } else if (names.contains("Prod") && variant.buildType.name == "debug") {
            variant.ignore = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/README.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"

    compile "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"

    testCompile "junit:junit:$rootProject.ext.junitVersion"

    //scalable size unit
    compile "com.intuit.sdp:sdp-android:$rootProject.ext.sdpVersion"

    //type-safe http client
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"

    //rxjava & rxandroid
    compile "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxAndroidVersion"

    //butter knife (view injection)
    compile "com.jakewharton:butterknife:$rootProject.ext.butterKnifeVersion"
    annotationProcessor("com.jakewharton:butterknife-compiler:$rootProject.ext.butterKnifeVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    //robolectric
    testCompile "org.robolectric:robolectric:$rootProject.ext.robolectricVersion"

    //dagger (Dependency Injection)
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    provided "javax.annotation:jsr250-api:$rootProject.ext.javaxAnnotation"

    //OkHttp logging interceptor (remove this on production version
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.loggingInterceptorVesion"

    //espresso contrib (Used for ui test)
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    //espresso core (Used for ui test)
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //crashlytics for crash monitoring
    compile("com.crashlytics.sdk.android:crashlytics:$rootProject.ext.crashlyticsVersion") {
        transitive = true;
    }

    compile "android.arch.persistence.room:runtime:$rootProject.ext.roomPersistenceVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.ext.roomPersistenceVersion"
    compile "android.arch.persistence.room:rxjava2:$rootProject.ext.roomPersistenceVersion"

    compile "android.arch.lifecycle:extensions:$rootProject.ext.roomPersistenceVersion"
    compile "android.arch.persistence.room:runtime:$rootProject.ext.roomPersistenceVersion"
    compile "android.arch.persistence.room:rxjava2:$rootProject.ext.roomPersistenceVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.ext.roomPersistenceVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.ext.roomPersistenceVersion"

}
